# -*- coding: utf-8 -*-

"""
Created on 2015年9月29日

@author: kerry
"""

import platform
import sys
import os
import time

sys.path.append('./../')

from analysis.analysis_engine import AnalysisEngine
from analysis.base.mlog import mlog
from multiprocessing import Pool

"""
1.文件来源地址方式
2.文件地址
3.存储方式
4.平台id 0 忽略平台

"""
class Console:

    def __init__(self):
        self.path = ""
        self.fetch_type = 0
        self.plt_id = 0
        self.input_data = 0
        self.__print_info()

    def __print_info(self):
        print "Generated by gfwlist2pac in precise mode:"
        #print "get data: 1.ftp 2.local 3.kakfa"
        #print "storage type : 1. sqlite"
        #print "other"

    def input_info(self):
        print "please input data type: 1. FILE  2.RawData"
        self.input_data = raw_input("type:")
        print "please input source path"
        self.path = raw_input("path:")
        print  "please analysis platform id"
        self.plt_id = int(raw_input("id:"))


def run(console):
    analysis_engine = AnalysisEngine()
    file_list = analysis_engine.input_data(console.path)
    i = 0
    count = len(file_list)
    while i < count:
        tlist = file_list[i:i + 4]
        i += 5
        start_time = time.time()
        for t in tlist:
            analysis_engine.process_file_data(console.plt_id, console.path, t, 0)
        end_time = time.time()
        mlog.log().info("analysis file count %d  expend %d", i, end_time - start_time)





def main():
    print('Python %s on %s' % (sys.version, sys.platform))
    sys_str = platform.system()
    print sys_str
    if platform.system() == "Darwin" or platform.system() == "Linux":
        reload(sys)
        sys.setdefaultencoding('utf-8')  # @UndefinedVariable
    os.chdir(os.getcwd())

    ### 控制台输出
    console = Console()
    console.input_info()



    pool = Pool(processes=3)

    result = pool.apply_async(run,(console,))

    pool.close()
    pool.join()
    if result.successful():
        print  "successful"

def test():
    analysis_engine = AnalysisEngine()
    file_list = analysis_engine.input_data('~/text_storage/60006bak')
    i = 0
    count = len(file_list)
    while i < count:
        tlist = file_list[i:i + 4]
        i += 5
        start_time = time.time()
        for t in tlist:
            analysis_engine.process_file_data(60006, '~/text_storage/60006bak', t, 0)
        end_time = time.time()
        mlog.log().info("analysis file count %d  expend %d", i, end_time - start_time)


def test_local():
    analysis_engine = AnalysisEngine()
    analysis_engine.process_file_data(60007,'./','xueqiu.db', 2)


if __name__ == '__main__':
    test_local()