//  Copyright (c) 2015-2015 The KID Authors. All rights reserved.
//  Created on: 2015年11月28日 Author: jiaoyongqing
//
#ifndef TRUNK_PLUGINS_TOOLS_RSA_H_
#define TRUNK_PLUGINS_TOOLS_RSA_H_

#include <stdio.h>
#include <string.h>
#include <openssl/evp.h>
#include <openssl/rand.h>
#include <openssl/rsa.h>
#include <openssl/pem.h>
#include <openssl/err.h>

const unsigned char PUBLIC_EXPONENT_HEX[] = {0x01, 0x00, 0x01};

const unsigned char MODULES_HEX[] = {\
0xEB, 0x2A, 0x38, 0x56, 0x86, 0x61, 0x88, \
0x7F, 0xA1, 0x80, 0xBD, 0xDB, 0x5C, 0xAB, \
0xD5, 0xF2, 0x1C, 0x7B, 0xFD, 0x59, 0xC0, \
0x90, 0xCB, 0x2D, 0x24, 0x5A, 0x87, 0xAC, \
0x25, 0x30, 0x62, 0x88, 0x27, 0x29, 0x29, \
0x3E, 0x55, 0x06, 0x35, 0x05, 0x08, 0xE7, \
0xF9, 0xAA, 0x3B, 0xB7, 0x7F, 0x43, 0x33, \
0x23, 0x14, 0x90, 0xF9, 0x15, 0xF6, 0xD6, \
0x3C, 0x55, 0xFE, 0x2F, 0x08, 0xA4, 0x9B, \
0x35, 0x3F, 0x44, 0x4A, 0xD3, 0x99, 0x3C, \
0xAC, 0xC0, 0x2D, 0xB7, 0x84, 0xAB, 0xBB, \
0x8E, 0x42, 0xA9, 0xB1, 0xBB, 0xFF, 0xFB, \
0x38, 0xBE, 0x18, 0xD7, 0x8E, 0x87, 0xA0, \
0xE4, 0x1B, 0x9B, 0x8F, 0x73, 0xA9, 0x28, \
0xEE, 0x0C, 0xCE, 0xE1, 0xF6, 0x73, 0x98, \
0x84, 0xB9, 0x77, 0x7E, 0x4F, 0xE9, 0xE8, \
0x8A, 0x1B, 0xBE, 0x49, 0x59, 0x27, 0xAC, \
0x4A, 0x79, 0x9B, 0x31, 0x81, 0xD6, 0x44, \
0x24, 0x43};

const int RSA_KEY_LENGTH = 1024;

class RsaOp {
 public:
  RsaOp();
  ~RsaOp();

  int set_params(const unsigned char *pub_expd = PUBLIC_EXPONENT_HEX, \
                                                int pub_expd_len = 3, \
                           const unsigned char *module = MODULES_HEX, \
                                                 int module_len = 128);

  int OpenPubkey();

  int PubkeyEncrypt(const unsigned char *in, \
                                 int in_len, \
                        unsigned char **out, \
                       int * const out_len);

 private:
  int CloseKey();
  void FreeRes();

 private:
  RSA *pub_key_;

  unsigned char *pub_expd_;

  unsigned char *module_;

  int pub_expd_len_;

  int module_len_;
};

#endif  //  TRUNK_PLUGINS_TOOLS_RSA_H_
